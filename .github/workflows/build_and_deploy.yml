name: Build and package

on:
  push:
      branches:
        - master
        - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14
      
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./target/site/jacoco/jacoco.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

      - name: Save result
        uses: actions/upload-artifact@v1
        with: 
          name: build-result
          path: target

  package-image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Build jar
        run: mvn package
        # Run a few (bash) commands to
        # build an publish an image
      - name: Build and publish Docker image to GitHub Packages
        env:
          DOCKER_IMAGE_TARGET: docker.pkg.github.com/${{ github.repository }}:${{ github.sha }}
          GITHUB_PACKAGE_REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # 1. Build a docker image using the specified target as a name
          # 2. Login to GitHub docker registry by piping the token into the password prompt
          # 3. Push the image to the registry
        run: |
          docker build --tag ${DOCKER_IMAGE_TARGET} .
          echo "${GITHUB_PACKAGE_REGISTRY_TOKEN}" | docker login
          docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          docker push ${DOCKER_IMAGE_TARGET}